services:
  shopping-nginx:
    image: nginx:alpine
    ports:
      - "8083:80"
    volumes:
      - ./shopping-service:/var/www/html
      - ./docker/nginx/shopping.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - shopping-service
    networks:
      - app-network

  shopping-service:
    build:
      context: ./shopping-service
      dockerfile: Dockerfile
    depends_on:
      - mysql-shopping
      - redis
      - elasticsearch
      - rabbitmq
    environment:
      DATABASE_URL: "mysql://${MYSQL_SHOPPING_USER}:${MYSQL_SHOPPING_PASSWORD}@mysql:3306/${MYSQL_SHOPPING_DATABASE}"
      REDIS_URL: "redis://redis:6379"
      RABBITMQ_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"

  order-nginx:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - ./order-service:/var/www/html
      - ./docker/nginx/order.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - order-service
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    depends_on:
      - mysql-order
      - redis
      - rabbitmq
    environment:
      DATABASE_URL: "mysql://${MYSQL_ORDER_USER}:${MYSQL_ORDER_PASSWORD}@mysql:3306/${MYSQL_ORDER_DATABASE}"
      REDIS_URL: "redis://redis:6379"
      RABBITMQ_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"

  notification-nginx:
    image: nginx:alpine
    ports:
      - "8084:80"
    volumes:
      - ./notification-service:/var/www/html
      - ./docker/nginx/notification.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - notification-service
    networks:
      - app-network
  
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    depends_on:
      - redis
      - rabbitmq
    environment:
      REDIS_URL: "redis://redis:6379"
      RABBITMQ_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"

  user-nginx:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./user-service:/var/www/html
      - ./docker/nginx/user.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user-service
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      - mysql-user
      - redis
      - rabbitmq
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql-user
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_MAIN_DATABASE}
      - DB_USERNAME=${MYSQL_MAIN_USER}
      - DB_PASSWORD=${MYSQL_MAIN_PASSWORD}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_USER_URL=http://localhost:8001
      - VITE_API_SHOPPING_URL=http://localhost:8003
      - VITE_API_ORDER_URL=http://localhost:8002
      - VITE_API_NOTIFICATION_URL=http://localhost:8004
    networks:
      - app-network

  mysql-shopping:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_SHOPPING_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_SHOPPING_DATABASE}
      MYSQL_USER: ${MYSQL_SHOPPING_USER}
      MYSQL_PASSWORD: ${MYSQL_SHOPPING_PASSWORD}
    volumes:
      - mysql_shopping_data:/var/lib/mysql
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password

  mysql-order:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ORDER_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_ORDER_DATABASE}
      MYSQL_USER: ${MYSQL_ORDER_USER}
      MYSQL_PASSWORD: ${MYSQL_ORDER_PASSWORD}
    volumes:
      - mysql_order_data:/var/lib/mysql
    ports:
      - "3308:3306"
    command: --default-authentication-plugin=mysql_native_password

  mysql-user:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_MAIN_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_MAIN_DATABASE}
      MYSQL_USER: ${MYSQL_MAIN_USER}
      MYSQL_PASSWORD: ${MYSQL_MAIN_PASSWORD}
    volumes:
      - mysql_user_data:/var/lib/mysql
    ports:
      - "3309:3306"
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3.9-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  phpmyadmin:
    image: arm64v8/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOSTS: mysql-shopping,mysql-order,mysql-user
      PMA_PORTS: 3306,3306,3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network
    depends_on:
      - mysql-shopping
      - mysql-order
      - mysql-user

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

networks:
  app-network:
    driver: bridge

volumes:
  mysql_shopping_data:
    name: mysql_shopping_data
  mysql_order_data:
    name: mysql_order_data
  mysql_user_data:
    name: mysql_user_data
  redis_data:
  rabbitmq_data:
  elasticsearch_data: